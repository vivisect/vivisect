abs
0 1 1 1 1 1 1 0 0 0 1 0 rd[3:0]
1 1 1 1 1 1 0 0 0 0 0 0 1 1 1 1 rs[3:0] rd[3:0]

adc
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 0 0 1 0 rd[3:0] 
1 1 1 1 1 1 0 0 0 0 0 0 1 0 ld[1:0] rs[3:0] rd[3:0] 
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 0 0 1 0 rs[3:0] rd[3:0] 

add
0 1 1 0 0 0 1 0 imm[3:0] rd[3:0]
0 1 0 0 1 0 ld[1:0] rs[3:0] rd[3:0]     # when memex == UB or src = Rs
0 0 0 0 0 1 1 0 mi[1:0] 0 0 1 0 ld[1:0] rs[3:0] rd[3:0]     # when memex != UB
0 1 1 1 0 0 li[1:0] rs2[3:0] rd[3:0] 
1 1 1 1 1 1 1 1 0 0 1 0 rd[3:0] rs[3:0] rs2[3:0]

and
0 1 1 0 0 1 0 0 imm[3:0] rd[3:0] 
0 1 1 1 0 1 li[1:0] 0 0 1 0 rd[3:0] 
0 1 0 1 0 0 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 0 1 0 0 ld[1:0] rs[3:0] rd[3:0] 
1 1 1 1 1 1 1 1 0 1 0 0 rd[3:0] rs[3:0] rs2[3:0]

bclr
1 1 1 1 0 0 ld[1:0] rd[3:0] 1 imm[2:0] 
1 1 1 1 1 1 0 0 0 1 1 0 0 1 ld[1:0] rd[3:0] rs[3:0]
0 1 1 1 1 0 1 imm[4:0] rd[3:0]
1 1 1 1 1 1 0 0 0 1 1 0 0 1 ld[1:0] rd[3:0] rs[3:0]

bz 
0 0 0 1 0 pcdsp[2:0]
0 0 1 1 1 0 1 0 pcdsp:16
0 0 1 0 0 0 0 0 pcdsp:8 
bge
0 0 1 0 1 0 0 0 pcdsp:8 
bnz 
0 0 0 1 1 pcdsp[2:0] 
0 0 1 1 1 0 1 1 pcdsp:16
0 0 1 0 0 0 0 1 pcdsp:8 
blt
0 0 1 0 1 0 0 1 pcdsp:8 
bgeu
0 0 1 0 0 0 1 0 pcdsp:8 
bgt
0 0 1 0 1 0 1 0 pcdsp:8 
bltu
0 0 1 0 0 0 1 1 pcdsp:8 
ble
0 0 1 0 1 0 1 1 pcdsp:8 
bgtu 
0 0 1 0 0 1 0 0 pcdsp:8 
bo
0 0 1 0 1 1 0 0 pcdsp:8 
bleu 
0 0 1 0 0 1 0 1 pcdsp:8 
bno
0 0 1 0 1 1 0 1 pcdsp:8 
bpz 
0 0 1 0 0 1 1 0 pcdsp:8 
#bra.b
#0 0 1 0 1 1 1 0 pcdsp:8 
bn 
0 0 1 0 0 1 1 1 pcdsp:8 


bmcnd
1 1 1 1 1 1 0 0 1 1 1 imm[2:0] ld[1:0] rd[3:0] cd[3:0]
1 1 1 1 1 1 0 1 1 1 1 imm[4:0] cd[3:0] rd[3:0] 
bnot
1 1 1 1 1 1 0 0 1 1 1 imm[2:0] ld[1:0] rd[3:0] 1 1 1 1
1 1 1 1 1 1 0 0 0 1 1 0 1 1 ld[1:0] rd[3:0] rs[3:0]
1 1 1 1 1 1 0 1 1 1 1 imm[4:0] 1 1 1 1 rd[3:0] 
1 1 1 1 1 1 0 0 0 1 1 0 1 1 ld[1:0] rd[3:0] rs[3:0]

bra
0 0 0 0 1 pcdsp[2:0]
0 0 1 0 1 1 1 0 pcdsp:8 
0 0 1 1 1 0 0 0 pcdsp:16
0 0 0 0 0 1 0 0 pcdsp:24
0 1 1 1 1 1 1 1 0 1 0 0 rs[3:0]

brk
0 0 0 0 0 0 0 0

bset
1 1 1 1 0 0 ld[1:0] rd[3:0] 0 imm[2:0]
1 1 1 1 1 1 0 0 0 1 1 0 0 0 ld[1:0] rd[3:0] rs[3:0]
0 1 1 1 1 0 0 imm[4:0] rd[3:0]
1 1 1 1 1 1 0 0 0 1 1 0 0 0 ld[1:0] rd[3:0] rs[3:0]

bsr
0 0 1 1 1 0 0 1 pcdsp:16
0 0 0 0 0 1 0 1 pcdsp:24
0 1 1 1 1 1 1 1 0 1 0 1 rs[3:0]

btst
1 1 1 1 0 1 ld[1:0] rs[3:0] 0 imm[2:0]
1 1 1 1 1 1 0 0 0 1 1 0 1 0 ld[1:0] rs2[3:0] rs[3:0]
0 1 1 1 1 1 0 imm[4:0] rs[3:0]
1 1 1 1 1 1 0 0 0 1 1 0 1 0 ld[1:0] rs2[3:0] rs[3:0]

clrpsw
0 1 1 1 1 1 1 1 1 0 1 1 cb[3:0]

cmp
0 1 1 0 0 0 0 1 imm[3:0] rs2[3:0]
0 1 1 1 0 1 0 1 0 1 0 1 rs2[3:0] #UIMM:8
0 1 1 1 0 1 li[1:0] 0 0 0 0 rs2[3:0]
0 1 0 0 0 1 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 0 0 0 1 ld[1:0] rs[3:0] rd[3:0]
 
div
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 1 0 0 0 rd[3:0]
1 1 1 1 1 1 0 0 0 0 1 0 0 0 ld[1:0] rs[3:0] rd[3:0]  # when memex == UB or src == Rs
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 1 0 0 0 rs[3:0] rd[3:0] # when memex != UB

divu
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 1 0 0 1 rd[3:0]
1 1 1 1 1 1 0 0 0 0 1 0 0 1 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 1 0 0 1 rs[3:0] rd[3:0]

emaca
1 1 1 1 1 1 0 1 0 0 0 0 a 1 1 1 rs[3:0] rs2[3:0]

emsba
1 1 1 1 1 1 0 1 0 1 0 0 a 1 1 1 rs[3:0] rs2[3:0]

emul
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 0 1 1 0 rd[3:0]
1 1 1 1 1 1 0 0 0 0 0 1 1 0 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 0 1 1 0 rs[3:0] rd[3:0]
 
emula
1 1 1 1 1 1 0 1 0 0 0 0 a 0 1 1 rs[3:0] rs2[3:0]

emulu
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 0 1 1 1 rd[3:0]
1 1 1 1 1 1 0 0 0 0 0 1 1 1 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 0 1 1 1 rs[3:0] rd[3:0]
 
fadd
1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 0 0 0 1 0 rd[3:0] #IMM:32
1 1 1 1 1 1 0 0 1 0 0 0 1 0 ld[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 1 1 1 0 1 0 rd[3:0] rs[3:0] rs2[3:0]


fcmp
1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 0 0 0 0 1 rs[3:0] #IMM:32
1 1 1 1 1 1 0 0 1 0 0 0 0 1 ld[1:0] rs[3:0] rs2[3:0]

fdiv
1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 0 0 1 0 0 rd[3:0] #IMM:32
1 1 1 1 1 1 0 0 1 0 0 1 0 0 ld[1:0] rs[3:0] rd[3:0]

fmul
1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 0 0 0 1 1 rd[3:0] #IMM:32
1 1 1 1 1 1 0 0 1 0 0 0 1 1 ld[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 1 1 1 0 1 1 rd[3:0] rs[3:0] rs2[3:0]

fsqrt
1 1 1 1 1 1 0 0 1 0 1 0 0 0 ld[1:0] rs[3:0] rd[3:0]

fsub
1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 0 0 0 0 0 rd[3:0] #IMM:32
1 1 1 1 1 1 0 0 1 0 0 0 0 0 ld[1:0] rs[3:0] rd[3:0] 
1 1 1 1 1 1 1 1 1 0 0 0 rd[3:0] rs[3:0] rs2[3:0] 

ftoi
1 1 1 1 1 1 0 0 1 0 0 1 0 1 ld[1:0] rs[3:0] rd[3:0] 

ftou
1 1 1 1 1 1 0 0 1 0 1 0 0 1 ld[1:0] rs[3:0] rd[3:0] 

int
0 1 1 1 0 1 0 1 0 1 1 0 0 0 0 0 #IMM:8 

itof
1 1 1 1 1 1 0 0 0 1 0 0 0 1 ld[1:0] rs[3:0] rd[3:0] 
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 1 0 0 0 1 rs[3:0] rd[3:0] 

jmp
0 1 1 1 1 1 1 1 0 0 0 0 rs[3:0]

jsr
0 1 1 1 1 1 1 1 0 0 0 1 rs[3:0]

machi
1 1 1 1 1 1 0 1 0 0 0 0 a 1 0 0 rs[3:0] rs2[3:0]

maclh
1 1 1 1 1 1 0 1 0 0 0 0 a 1 1 0 rs[3:0] rs2[3:0]

maclo
1 1 1 1 1 1 0 1 0 0 0 0 a 1 0 1 rs[3:0] rs2[3:0]

max
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 0 1 0 0 rd[3:0]
1 1 1 1 1 1 0 0 0 0 0 1 0 0 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 0 1 0 0 rs[3:0] rd[3:0]
 
min
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 0 1 0 1 rd[3:0]
1 1 1 1 1 1 0 0 0 0 0 1 0 1 ld[1:0] rs[3:0] rd[3:0] 
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 0 1 0 1 rs[3:0] rd[3:0]

mov
1 0 sz[1:0] 0 dsp[4:1] rd[2:0] dsp[0] rs[2:0]   # jacked up dsp
1 0 sz[1:0] 1 dsp[4:1] rs[2:0] dsp[0] rd[2:0]   # jacked up dsp
0 1 1 0 0 1 1 0 imm[3:0] rd[3:0]
0 0 1 1 1 1 sz[1:0] dsp[4] rd[2:0] dsp[3:0] #IMM:8        # #UIMM:8 as well?
0 1 1 1 0 1 0 1 0 1 0 0 rd[3:0] #UIMM:8

1 1 1 1 1 0 1 1 rd[3:0] li[1:0] 1 0  ###  #SIMM:8 #SIMM:16 #SIMM:24 #IMM:32       # this is the next 4 lines
#1 1 1 1 1 0 1 1 rd[3:0] 0 0 1 0 #IMM:32
#1 1 1 1 1 0 1 1 rd[3:0] 0 1 1 0 #SIMM:8
#1 1 1 1 1 0 1 1 rd[3:0] 1 0 1 0 #SIMM:16
#1 1 1 1 1 0 1 1 rd[3:0] 1 1 1 0 #SIMM:24

1 1 sz[1:0] 1 1 1 1 rs[3:0] rd[3:0]
1 1 1 1 1 0 ld[1:0] rd[3:0] li[1:0] sz[1:0]
 
1 1 sz[1:0] 1 1 ld[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 1 0 0 1 sz[1:0] ri[3:0] rb[3:0] rd[3:0]
1 1 sz[1:0] ld[1:0] 1 1 rd[3:0] rs[3:0]

1 1 1 1 1 1 1 0 0 0 sz[1:0] ri[3:0] rb[3:0] rs[3:0]
1 1 sz[1:0] ldd[1:0] lds[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 0 1 0 0 1 0 0 ad sz[1:0] rd[3:0] rs[3:0]

1 1 1 1 1 1 0 1 0 0 1 0 1 ad sz[1:0] rs[3:0] rd[3:0]

movco
1 1 1 1 1 1 0 1 0 0 1 0 0 1 1 1 rd[3:0] rs[3:0]

movli
1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 1 rs[3:0] rd[3:0]

movu
1 0 1 1 sz dsp[4:1] rs[2:0] dsp[0] rd[2:0]
0 1 0 1 1 sz ld[1:0] rs[3:0] rd[3:0] 
1 1 1 1 1 1 1 0 1 1 0 sz ri[3:0] rb[3:0] rd[3:0] 
1 1 1 1 1 1 0 1 0 0 1 1 ad[1:0] 0 sz rs[3:0] rd[3:0]

msbhi
1 1 1 1 1 1 0 1 0 1 0 0 a 1 0 0 rs[3:0] rs2[3:0]

msblh
1 1 1 1 1 1 0 1 0 1 0 0 a 1 1 0 rs[3:0] rs2[3:0] 

msblo
1 1 1 1 1 1 0 1 0 1 0 0 a 1 0 1 rs[3:0] rs2[3:0]

mul
0 1 1 0 0 0 1 1 imm[3:0] rd[3:0]
0 1 1 1 0 1 li[1:0] 0 0 0 1 rd[3:0]
0 1 0 0 1 1 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 0 0 1 1 ld[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 1 1 0 0 1 1 rd[3:0] rs[3:0] rs2[3:0]

mulhi
1 1 1 1 1 1 0 1 0 0 0 0 a 0 0 0 rs[3:0] rs2[3:0]

mullh
1 1 1 1 1 1 0 1 0 0 0 0 a 0 1 0 rs[3:0] rs2[3:0]

mullo
1 1 1 1 1 1 0 1 0 0 0 0 a 0 0 1 rs[3:0] rs2[3:0]

mvfacgu
1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 imm[1] a imm[0] 1 1 rd[3:0]

mvfachi
1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 imm[1] a imm[0] 0 0 rd[3:0] 

mvfaclo
1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 imm[1] a imm[0] 0 1 rd[3:0]

mvfacmi
1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 imm[1] a imm[0] 1 0 rd[3:0]

mvfc
1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 0 cr[3:0] rd[3:0]

mvtacgu
1 1 1 1 1 1 0 1 0 0 0 1 0 1 1 1 a 0 1 1 rs[3:0]

mvtachi
1 1 1 1 1 1 0 1 0 0 0 1 0 1 1 1 a 0 0 0 rs[3:0]

mvtaclo
1 1 1 1 1 1 0 1 0 0 0 1 0 1 1 1 a 0 0 1 rs[3:0]

mvtc
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 1 1 0 0 0 0 cr[3:0]
1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 rs[3:0] cr[3:0]

mvtipl
0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 imm[3:0]

neg
0 1 1 1 1 1 1 0 0 0 0 1 rd[3:0]
1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 1 rs[3:0] rd[3:0]

nop
0 0 0 0 0 0 1 1

not
0 1 1 1 1 1 1 0 0 0 0 0 rd[3:0] 
1 1 1 1 1 1 0 0 0 0 1 1 1 0 1 1 rs[3:0] rd[3:0]

or
0 1 1 0 0 1 0 1 imm[3:0] rd[3:0]
0 1 1 1 0 1 li[1:0] 0 0 1 1 rd[3:0]
0 1 0 1 0 1 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 0 1 0 1 ld[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 1 1 0 1 0 1 rd[3:0] rs[3:0] rs2[3:0]

pop
0 1 1 1 1 1 1 0 1 0 1 1 rd[3:0]

popc
0 1 1 1 1 1 1 0 1 1 1 0 cr[3:0]

popm
0 1 1 0 1 1 1 1 rd[3:0] rd2[3:0]

push
0 1 1 1 1 1 1 0 1 0 sz[1:0] rs[3:0]
1 1 1 1 0 1 ld[1:0] rs[3:0] 1 0 sz[1:0]

pushc
0 1 1 1 1 1 1 0 1 1 0 0 cr[3:0]

pushm
0 1 1 0 1 1 1 0 rs[3:0] rs2[3:0]

racl
1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 a 0 0 imm 0 0 0 0

racw
1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 0 a 0 0 imm 0 0 0 0   # bugfix: the documentation doesn't show an "A" field!!!

rdacl
1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 a 1 0 imm 0 0 0 0

rdacw
1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 0 a 1 0 imm 0 0 0 0

revl
1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 rs[3:0] rd[3:0]

revw
1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 1 rs[3:0] rd[3:0]

rmpa
0 1 1 1 1 1 1 1 1 0 0 0 1 1 sz[1:0]

rolc
0 1 1 1 1 1 1 0 0 1 0 1 rd[3:0]

rorc
0 1 1 1 1 1 1 0 0 1 0 0 rd[3:0]

rotl
1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 imm[4:0] rd[3:0]
1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 rs[3:0] rd[3:0] 

rotr
1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 imm[4:0] rd[3:0]
1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 rs[3:0] rd[3:0]

round
1 1 1 1 1 1 0 0 1 0 0 1 1 0 ld[1:0] rs[3:0] rd[3:0]

rte
0 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 

rtfi
0 1 1 1 1 1 1 1 1 0 0 1 0 1 0 0

rts
0 0 0 0 0 0 1 0

rtsd
0 1 1 0 0 1 1 1 #UIMM:8
0 0 1 1 1 1 1 1 rd[3:0] rd2[3:0] #UIMM:8

sat
0 1 1 1 1 1 1 0 0 0 1 1 rd[3:0]

satr
0 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1

sbb
#1 1 1 1 1 1 0 0 0 0 0 0 0 0 ld[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 rs[3:0] rd[3:0]     # this is what the docs say is the only LDS encoding
0 0 0 0 0 1 1 0 1 0 1 0 0 0 ld[1:0] 0 0 0 0 0 0 0 0 rs[3:0] rd[3:0]

sccnd
1 1 1 1 1 1 0 0 1 1 0 1 sz[1:0] ld[1:0] rd[3:0] cd[3:0]

scmpu
0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 1

setpsw
0 1 1 1 1 1 1 1 1 0 1 0 cb[3:0]

shar
0 1 1 0 1 0 1 imm[4:0] rd[3:0]
1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 1 rs[3:0] rd[3:0]
1 1 1 1 1 1 0 1 1 0 1 imm[4:0] rs2[3:0] rd[3:0]

shll
0 1 1 0 1 1 0 imm[4:0] rd[3:0]
1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 rs[3:0] rd[3:0]
1 1 1 1 1 1 0 1 1 1 0 imm[4:0] rs2[3:0] rd[3:0]

shlr
0 1 1 0 1 0 0 imm[4:0] rd[3:0]
1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 rs[3:0] rd[3:0]
1 1 1 1 1 1 0 1 1 0 0 imm[4:0] rs2[3:0] rd[3:0]

smovb
0 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1

smovf
0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1

smovu
0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 1

sstr
0 1 1 1 1 1 1 1 1 0 0 0 1 0 sz[1:0]

stnz
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 1 1 1 1 rd[3:0]
1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 rs[3:0] rd[3:0]     # docs are wrong.  discovered with rx_elf_as and rx_elf_objdump

stz
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 1 1 1 0 rd[3:0]
1 1 1 1 1 1 0 0 0 1 0 0 1 0 1 1 rs[3:0] rd[3:0]

sub
0 1 1 0 0 0 0 0 imm[3:0] rd[3:0]
0 1 0 0 0 0 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 0 0 0 0 ld[1:0] rs[3:0] rd[3:0]
1 1 1 1 1 1 1 1 0 0 0 0 rd[3:0] rs[3:0] rs2[3:0]

suntil
0 1 1 1 1 1 1 1 1 0 0 0 0 0 sz[1:0]

swhile
0 1 1 1 1 1 1 1 1 0 0 0 0 1 sz[1:0]

tst
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 1 1 0 0 rs2[3:0]
1 1 1 1 1 1 0 0 0 0 1 1 0 0 ld[1:0] rs[3:0] rs2[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 1 1 0 0 rs[3:0] rs2[3:0]

utof
1 1 1 1 1 1 0 0 0 1 0 1 0 1 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 1 0 1 0 1 rs[3:0] rd[3:0]
 
wait
0 1 1 1 1 1 1 1 1 0 0 1 0 1 1 0

xchg
1 1 1 1 1 1 0 0 0 1 0 0 0 0 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 1 0 0 0 0 rs[3:0] rd[3:0]

xor
1 1 1 1 1 1 0 1 0 1 1 1 li[1:0] 0 0 1 1 0 1 rd[3:0]
1 1 1 1 1 1 0 0 0 0 1 1 0 1 ld[1:0] rs[3:0] rd[3:0]
0 0 0 0 0 1 1 0 mi[1:0] 1 0 0 0 ld[1:0] 0 0 0 0 1 1 0 1 rs[3:0] rd[3:0]

