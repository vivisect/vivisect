# Used to decode target response to the 'g' packet ("info registers")
# (register name, register size)

# This appears to be the full set of registers. Depending on the environment, 
# the GDB server may only use a subset of these registers (e.g. usermode 
# debugging probably won't use the control registers). It seems like the 
# order sent by the server is the same as the order you receive when sending 
# the 'info registers all' command to a standalone GDB client.

from envi.const import *


ARCH_META = {
    ('ppc-server',      ENDIAN_MSB, 8): 'powerpc',
    ('ppc32-server',    ENDIAN_MSB, 4): 'powerpc',
    ('ppc-embedded',    ENDIAN_MSB, 8): 'powerpc:vle',
    ('ppc32-embedded',  ENDIAN_MSB, 4): 'powerpc:vle',
    ('ppc-vle',         ENDIAN_MSB, 4): 'powerpc:vle',
    ('amd64',           ENDIAN_LSB, 8): 'i386:x86-64',
    ('i386',            ENDIAN_LSB, 4): 'i386:x86-32',
    ('armv7',           ENDIAN_LSB, 4): 'armv7',
    ('arm32',           ENDIAN_LSB, 4): 'armv7',
    ('arm',             ENDIAN_LSB, 4): 'armv7',
    ('a32',             ENDIAN_LSB, 4): 'armv7',
}


# The format of these lists is: (reg_name, reg_size, gdb_index)
# This format is used and defined in gdbstub.py as GdbStubBase._gdb_reg_fmt
QEMU_PPC64_REG = [
        ('r0', 0x40, 0x0),
        ('r1', 0x40, 0x1),
        ('r2', 0x40, 0x2),
        ('r3', 0x40, 0x3),
        ('r4', 0x40, 0x4),
        ('r5', 0x40, 0x5),
        ('r6', 0x40, 0x6),
        ('r7', 0x40, 0x7),
        ('r8', 0x40, 0x8),
        ('r9', 0x40, 0x9),
        ('r10', 0x40, 0xa),
        ('r11', 0x40, 0xb),
        ('r12', 0x40, 0xc),
        ('r13', 0x40, 0xd),
        ('r14', 0x40, 0xe),
        ('r15', 0x40, 0xf),
        ('r16', 0x40, 0x10),
        ('r17', 0x40, 0x11),
        ('r18', 0x40, 0x12),
        ('r19', 0x40, 0x13),
        ('r20', 0x40, 0x14),
        ('r21', 0x40, 0x15),
        ('r22', 0x40, 0x16),
        ('r23', 0x40, 0x17),
        ('r24', 0x40, 0x18),
        ('r25', 0x40, 0x19),
        ('r26', 0x40, 0x1a),
        ('r27', 0x40, 0x1b),
        ('r28', 0x40, 0x1c),
        ('r29', 0x40, 0x1d),
        ('r30', 0x40, 0x1e),
        ('r31', 0x40, 0x1f),
        ('f0', 0x40, 0x20),
        ('f1', 0x40, 0x21),
        ('f2', 0x40, 0x22),
        ('f3', 0x40, 0x23),
        ('f4', 0x40, 0x24),
        ('f5', 0x40, 0x25),
        ('f6', 0x40, 0x26),
        ('f7', 0x40, 0x27),
        ('f8', 0x40, 0x28),
        ('f9', 0x40, 0x29),
        ('f10', 0x40, 0x2a),
        ('f11', 0x40, 0x2b),
        ('f12', 0x40, 0x2c),
        ('f13', 0x40, 0x2d),
        ('f14', 0x40, 0x2e),
        ('f15', 0x40, 0x2f),
        ('f16', 0x40, 0x30),
        ('f17', 0x40, 0x31),
        ('f18', 0x40, 0x32),
        ('f19', 0x40, 0x33),
        ('f20', 0x40, 0x34),
        ('f21', 0x40, 0x35),
        ('f22', 0x40, 0x36),
        ('f23', 0x40, 0x37),
        ('f24', 0x40, 0x38),
        ('f25', 0x40, 0x39),
        ('f26', 0x40, 0x3a),
        ('f27', 0x40, 0x3b),
        ('f28', 0x40, 0x3c),
        ('f29', 0x40, 0x3d),
        ('f30', 0x40, 0x3e),
        ('f31', 0x40, 0x3f),
        ('pc', 0x40, 0x40),
        ('msr', 0x40, 0x41),
        ('cr', 0x40, 0x42),
        ('lr', 0x40, 0x43),
        ('ctr', 0x40, 0x44),
        ('xer', 0x20, 0x45),
        ('fpscr', 0x20, 0x46),
        ('vr0', 0x80, 0x47),
        ('vr1', 0x80, 0x48),
        ('vr2', 0x80, 0x49),
        ('vr3', 0x80, 0x4a),
        ('vr4', 0x80, 0x4b),
        ('vr5', 0x80, 0x4c),
        ('vr6', 0x80, 0x4d),
        ('vr7', 0x80, 0x4e),
        ('vr8', 0x80, 0x4f),
        ('vr9', 0x80, 0x50),
        ('vr10', 0x80, 0x51),
        ('vr11', 0x80, 0x52),
        ('vr12', 0x80, 0x53),
        ('vr13', 0x80, 0x54),
        ('vr14', 0x80, 0x55),
        ('vr15', 0x80, 0x56),
        ('vr16', 0x80, 0x57),
        ('vr17', 0x80, 0x58),
        ('vr18', 0x80, 0x59),
        ('vr19', 0x80, 0x5a),
        ('vr20', 0x80, 0x5b),
        ('vr21', 0x80, 0x5c),
        ('vr22', 0x80, 0x5d),
        ('vr23', 0x80, 0x5e),
        ('vr24', 0x80, 0x5f),
        ('vr25', 0x80, 0x60),
        ('vr26', 0x80, 0x61),
        ('vr27', 0x80, 0x62),
        ('vr28', 0x80, 0x63),
        ('vr29', 0x80, 0x64),
        ('vr30', 0x80, 0x65),
        ('vr31', 0x80, 0x66),
        ('vscr', 0x20, 0x67),
        ('vrsave', 0x20, 0x68),
        ('vs0h', 0x40, 0x69),
        ('vs1h', 0x40, 0x6a),
        ('vs2h', 0x40, 0x6b),
        ('vs3h', 0x40, 0x6c),
        ('vs4h', 0x40, 0x6d),
        ('vs5h', 0x40, 0x6e),
        ('vs6h', 0x40, 0x6f),
        ('vs7h', 0x40, 0x70),
        ('vs8h', 0x40, 0x71),
        ('vs9h', 0x40, 0x72),
        ('vs10h', 0x40, 0x73),
        ('vs11h', 0x40, 0x74),
        ('vs12h', 0x40, 0x75),
        ('vs13h', 0x40, 0x76),
        ('vs14h', 0x40, 0x77),
        ('vs15h', 0x40, 0x78),
        ('vs16h', 0x40, 0x79),
        ('vs17h', 0x40, 0x7a),
        ('vs18h', 0x40, 0x7b),
        ('vs19h', 0x40, 0x7c),
        ('vs20h', 0x40, 0x7d),
        ('vs21h', 0x40, 0x7e),
        ('vs22h', 0x40, 0x7f),
        ('vs23h', 0x40, 0x80),
        ('vs24h', 0x40, 0x81),
        ('vs25h', 0x40, 0x82),
        ('vs26h', 0x40, 0x83),
        ('vs27h', 0x40, 0x84),
        ('vs28h', 0x40, 0x85),
        ('vs29h', 0x40, 0x86),
        ('vs30h', 0x40, 0x87),
        ('vs31h', 0x40, 0x88),
]


GDB_USER_X86_64_REG = [
        ('rax', 0x40, 0x0),
        ('rbx', 0x40, 0x1),
        ('rcx', 0x40, 0x2),
        ('rdx', 0x40, 0x3),
        ('rsi', 0x40, 0x4),
        ('rdi', 0x40, 0x5),
        ('rbp', 0x40, 0x6),
        ('rsp', 0x40, 0x7),
        ('r8', 0x40, 0x8),
        ('r9', 0x40, 0x9),
        ('r10', 0x40, 0xa),
        ('r11', 0x40, 0xb),
        ('r12', 0x40, 0xc),
        ('r13', 0x40, 0xd),
        ('r14', 0x40, 0xe),
        ('r15', 0x40, 0xf),
        ('rip', 0x40, 0x10),
        ('eflags', 0x20, 0x11),
        ('cs', 0x20, 0x12),
        ('ss', 0x20, 0x13),
        ('ds', 0x20, 0x14),
        ('es', 0x20, 0x15),
        ('fs', 0x20, 0x16),
        ('gs', 0x20, 0x17),
        ('st0', 0x50, 0x18),
        ('st1', 0x50, 0x19),
        ('st2', 0x50, 0x1a),
        ('st3', 0x50, 0x1b),
        ('st4', 0x50, 0x1c),
        ('st5', 0x50, 0x1d),
        ('st6', 0x50, 0x1e),
        ('st7', 0x50, 0x1f),
        ('fctrl', 0x20, 0x20),
        ('fstat', 0x20, 0x21),
        ('ftag', 0x20, 0x22),
        ('fiseg', 0x20, 0x23),
        ('fioff', 0x20, 0x24),
        ('foseg', 0x20, 0x25),
        ('fooff', 0x20, 0x26),
        ('fop', 0x20, 0x27),
        ('ymm0', 0x80, 0x28),
        ('ymm1', 0x80, 0x29),
        ('ymm2', 0x80, 0x2a),
        ('ymm3', 0x80, 0x2b),
        ('ymm4', 0x80, 0x2c),
        ('ymm5', 0x80, 0x2d),
        ('ymm6', 0x80, 0x2e),
        ('ymm7', 0x80, 0x2f),
        ('ymm8', 0x80, 0x30),
        ('ymm9', 0x80, 0x31),
        ('ymm10', 0x80, 0x32),
        ('ymm11', 0x80, 0x33),
        ('ymm12', 0x80, 0x34),
        ('ymm13', 0x80, 0x35),
        ('ymm14', 0x80, 0x36),
        ('ymm15', 0x80, 0x37),
        ('mxcsr', 0x20, 0x38)]



QEMU_X86_64_REG = [
        ('rax', 64, 0),
        ('rbx', 64, 1),
        ('rcx', 64, 2),
        ('rdx', 64, 3),
        ('rsi', 64, 4),
        ('rdi', 64, 5),
        ('rbp', 64, 6),
        ('rsp', 64, 7),
        ('r8', 64, 8),
        ('r9', 64, 9),
        ('r10', 64, 10),
        ('r11', 64, 11),
        ('r12', 64, 12),
        ('r13', 64, 13),
        ('r14', 64, 14),
        ('r15', 64, 15),
        ('rip', 64, 16),
        ('eflags', 32, 17),
        ('cs', 32, 18),
        ('ss', 32, 19),
        ('ds', 32, 20),
        ('es', 32, 21),
        ('fs', 32, 22),
        ('gs', 32, 23),
        ('fs_base', 64, 24),
        ('gs_base', 64, 25),
        ('k_gs_base', 64, 26),
        ('cr0', 64, 27),
        ('cr2', 64, 28),
        ('cr3', 64, 29),
        ('cr4', 64, 30),
        ('cr8', 64, 31),
        ('efer', 64, 32),
        ('st0', 80, 33),
        ('st1', 80, 34),
        ('st2', 80, 35),
        ('st3', 80, 36),
        ('st4', 80, 37),
        ('st5', 80, 38),
        ('st6', 80, 39),
        ('st7', 80, 40),
        ('fctrl', 32, 41),
        ('fstat', 32, 42),
        ('ftag', 32, 43),
        ('fiseg', 32, 44),
        ('fioff', 32, 45),
        ('foseg', 32, 46),
        ('fooff', 32, 47),
        ('fop', 32, 48),
        ('xmm0', 128, 49),
        ('xmm1', 128, 50),
        ('xmm2', 128, 51),
        ('xmm3', 128, 52),
        ('xmm4', 128, 53),
        ('xmm5', 128, 54),
        ('xmm6', 128, 55),
        ('xmm7', 128, 56),
        ('xmm8', 128, 57),
        ('xmm9', 128, 58),
        ('xmm10', 128, 59),
        ('xmm11', 128, 60),
        ('xmm12', 128, 61),
        ('xmm13', 128, 62),
        ('xmm14', 128, 63),
        ('xmm15', 128, 64),
        ('mxcsr', 32, 65)]


# connected to gdbserver on a nixos box
GDBSERVER_A32_REG = QEMU_A32_REG = [
            ('r0', 32, 0),
            ('r1', 32, 1),
            ('r2', 32, 2),
            ('r3', 32, 3),
            ('r4', 32, 4),
            ('r5', 32, 5),
            ('r6', 32, 6),
            ('r7', 32, 7),
            ('r8', 32, 8),
            ('r9', 32, 9),
            ('r10', 32, 10),
            ('r11', 32, 11),
            ('r12', 32, 12),
            ('sp', 32, 13),
            ('lr', 32, 14),
            ('pc', 32, 15),
            ('cpsr', 32, 25),
            ('d0', 64, 26),
            ('d1', 64, 27),
            ('d2', 64, 28),
            ('d3', 64, 29),
            ('d4', 64, 30),
            ('d5', 64, 31),
            ('d6', 64, 32),
            ('d7', 64, 33),
            ('d8', 64, 34),
            ('d9', 64, 35),
            ('d10', 64, 36),
            ('d11', 64, 37),
            ('d12', 64, 38),
            ('d13', 64, 39),
            ('d14', 64, 40),
            ('d15', 64, 41),
            ('d16', 64, 42),
            ('d17', 64, 43),
            ('d18', 64, 44),
            ('d19', 64, 45),
            ('d20', 64, 46),
            ('d21', 64, 47),
            ('d22', 64, 48),
            ('d23', 64, 49),
            ('d24', 64, 50),
            ('d25', 64, 51),
            ('d26', 64, 52),
            ('d27', 64, 53),
            ('d28', 64, 54),
            ('d29', 64, 55),
            ('d30', 64, 56),
            ('d31', 64, 57),
            ('fpscr', 32, 58),
        ]
